# Criar um repositório
git init

# Clonar um repositório
git clone <RERPOSITORIO A SER CLONADO> <LOCAL ONDE O RERPOSITORIO VAI SER CLONADO>

# Verificar arquivos modificados, novos e etc
git status

# Remover origin
git remove rm origin

# Adicionar arquivos a serem comitados (o '.' adiciona todos os arquivos)
git add <ARQUVO> || .

# Fazer um commit (Flag: -a; comitar varios arquivos de uma vez)
git commit <ARQUVO || -a> -m <MENSAGEM>

# Enviar os arquivos
git push

# Receber atualizações do GitHub
git pull

# Remover arquivos do git
git rm

# Acessar os logs de um projeto
git log

# Renomeando arquivos ou movendo arquivos
git mv <ARQUVO ANTIGO> <ARQUVO NOVO || LOCAL ONDE QUER MOVER>

# Desfazendo alterações
git checkout

# Ignorar arquivos
criar um .gitignore

# Resetar todas as mudanças feitas (Geralmente se usa a flag --hard)
git reset

# Para criar uma branch
git branch <NOME>

# Para visualizar as branchs
git branch

# Deletar uma branch
git branch -d <NOME>

# Cria uma nova branch já mudando para ela
git checkout -b <NOME>

# Muda para outra branch
git checkout <NOME>

# Unir branchs
git merge <NOME>

# Salvar as modificações atuais e reseta o repositório para uma versão anterior
git stash

# Verificar os stashs criados
git stash list

# Recuperando um stash
git stash apply <NUMERO DA STASH>

# Mostrar as alterações de uma stash especifica
git stash show -p <NUMERO DA STASH>

# Remover stash
git stash drop <NUMERO DA STASH>

# Remover todas as stashs de uma vez
git stash clear

# Criar tags nas branchs (serve como um checkpoint)
git tag -a <NOME> -m <MENSAGEM>

# Lista as tags criadas
git tag

# Verificar uma tag
git show <NOME DA TAG>

# Trocar de tag
git checkout <NOME DA TAG>

# Eviar tag para o repositório
git push origin <NOME DA TAG>

# Enviar todas as tags de uma vez
git push origin --tags

# Sempre que criar branch nova o git vai automaticamente associá-la ao remoto (origin)
git config --global push.autoSetupRemote true

# Mostrar branches e tags não reconhecidos
git fetch

# Utilizando remote para adicionar um repositório paar trackear
git remote add origin <LINK>

# Adicionar um submodulo
git submodule add <RERPOSITORIO> <LOCAL>

# Verificar os submodulos
git submodule

# Atualizar um submodulo (Necessário fazer um commit antes)
git push --recurse-submodules=on-demand

# Mostrar diversas informações ("q' para sair)
git show

# Mostra as diferenças de um branch, atual com o remoto
git diff

# Mostra as diferenças entre arquivos
git diff <ARQUVO A> <ARQUVO B>

# Mostra um log resumido ("q' para sair)
git shortlog

# Limpar arquivos untracked
git clean

# Exclui arquivos que o git julga não serem necessários
git gc

# Checar a integridade dos arquivos
git fsck

# Mostra todos os passos no repositório
git reflog

# Transformar repositório em um arquivos
git archive --format-zip --output master_files.zip master